export enum SyntaxKind {
    AssignmentExpression = 0,
    AssignmentPattern = 1,
    ArrayExpression = 2,
    ArrayPattern = 3,
    ArrowFunctionExpression = 4,
    AwaitExpression = 5,
    BlockStatement = 6,
    BinaryExpression = 7,
    BreakStatement = 8,
    CallExpression = 9,
    CatchClause = 10,
    ClassBody = 11,
    ClassDeclaration = 12,
    ClassExpression = 13,
    ConditionalExpression = 14,
    ContinueStatement = 15,
    DoWhileStatement = 16,
    DebuggerStatement = 17,
    EmptyStatement = 18,
    ExportAllDeclaration = 19,
    ExportDefaultDeclaration = 20,
    ExportNamedDeclaration = 21,
    ExportSpecifier = 22,
    ExpressionStatement = 23,
    ForStatement = 24,
    ForOfStatement = 25,
    ForInStatement = 26,
    FunctionDeclaration = 27,
    FunctionExpression = 28,
    Identifier = 29,
    IfStatement = 30,
    Import = 31,
    ImportDeclaration = 32,
    ImportDefaultSpecifier = 33,
    ImportNamespaceSpecifier = 34,
    ImportSpecifier = 35,
    Literal = 36,
    LabeledStatement = 37,
    LogicalExpression = 38,
    MemberExpression = 39,
    MetaProperty = 40,
    MethodDefinition = 41,
    NewExpression = 42,
    ObjectExpression = 43,
    ObjectPattern = 44,
    Module = 45,
    Property = 46,
    RestElement = 47,
    RestProperty = 48,
    ReturnStatement = 49,
    SequenceExpression = 50,
    SpreadElement = 51,
    SpreadProperty = 52,
    Super = 53,
    SwitchCase = 54,
    SwitchStatement = 55,
    TaggedTemplateExpression = 56,
    TemplateElement = 57,
    TemplateLiteral = 58,
    ThisExpression = 59,
    ThrowStatement = 60,
    TryStatement = 61,
    UnaryExpression = 62,
    UpdateExpression = 63,
    VariableDeclaration = 64,
    VariableDeclarator = 65,
    WhileStatement = 66,
    WithStatement = 67,
    YieldExpression = 68,
    //
    ArrowParameterPlaceHolder = 69,
    // JSX
    JSXAttribute = 70,
    JSXClosingElement = 71,
    JSXElement = 72,
    JSXEmptyExpression = 73,
    JSXExpressionContainer = 74,
    JSXIdentifier = 75,
    JSXMemberExpression = 76,
    JSXNamespacedName = 77,
    JSXOpeningElement = 78,
    JSXSpreadAttribute = 79,
    JSXText = 80,
    // Comment nodes aren't actually place on the AST, but defining a Comment node unifies the delegation interface.
    LineComment = 81,
    BlockComment = 82
}

export const Syntax = {
    AssignmentExpression: 'AssignmentExpression',
    AssignmentPattern: 'AssignmentPattern',
    ArrayExpression: 'ArrayExpression',
    ArrayPattern: 'ArrayPattern',
    ArrowFunctionExpression: 'ArrowFunctionExpression',
    ArrowParameterPlaceHolder: 'ArrowParameterPlaceHolder',
    AwaitExpression: 'AwaitExpression',
    BlockStatement: 'BlockStatement',
    BlockComment: 'BlockComment',
    BinaryExpression: 'BinaryExpression',
    BreakStatement: 'BreakStatement',
    CallExpression: 'CallExpression',
    CatchClause: 'CatchClause',
    ChainExpression: 'ChainExpression',
    ClassBody: 'ClassBody',
    ClassDeclaration: 'ClassDeclaration',
    ClassExpression: 'ClassExpression',
    ConditionalExpression: 'ConditionalExpression',
    ContinueStatement: 'ContinueStatement',
    DoWhileStatement: 'DoWhileStatement',
    DebuggerStatement: 'DebuggerStatement',
    Directive: 'Directive',
    EmptyStatement: 'EmptyStatement',
    ExportAllDeclaration: 'ExportAllDeclaration',
    ExportDefaultDeclaration: 'ExportDefaultDeclaration',
    ExportNamedDeclaration: 'ExportNamedDeclaration',
    ExportSpecifier: 'ExportSpecifier',
    ExpressionStatement: 'ExpressionStatement',
    ForStatement: 'ForStatement',
    ForOfStatement: 'ForOfStatement',
    ForInStatement: 'ForInStatement',
    FunctionDeclaration: 'FunctionDeclaration',
    FunctionExpression: 'FunctionExpression',
    Identifier: 'Identifier',
    IfStatement: 'IfStatement',
    Import: 'Import',
    ImportDeclaration: 'ImportDeclaration',
    ImportDefaultSpecifier: 'ImportDefaultSpecifier',
    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
    ImportSpecifier: 'ImportSpecifier',
    JSXAttribute: 'JSXAttribute',
    JSXClosingElement: 'JSXClosingElement',
    JSXElement: 'JSXElement',
    JSXEmptyExpression: 'JSXEmptyExpression',
    JSXExpressionContainer: 'JSXExpressionContainer',
    JSXIdentifier: 'JSXIdentifier',
    JSXMemberExpression: 'JSXMemberExpression',
    JSXNamespacedName: 'JSXNamesapcedName',
    JSXOpeningElement: 'JSXOperningElement',
    JSXSpreadAttribute: 'JSXSpreadAttribute',
    JSXText: 'JSXText',
    LineComment: 'LineComment',
    Literal: 'Literal',
    LabeledStatement: 'LabeledStatement',
    LogicalExpression: 'LogicalExpression',
    MemberExpression: 'MemberExpression',
    MetaProperty: 'MetaProperty',
    MethodDefinition: 'MethodDefinition',
    Module: 'Module',
    NewExpression: 'NewExpression',
    ObjectExpression: 'ObjectExpression',
    ObjectPattern: 'ObjectPattern',
    Program: 'Program',
    Property: 'Property',
    RestElement: 'RestElement',
    RestProperty: 'RestProperty',
    ReturnStatement: 'ReturnStatement',
    SequenceExpression: 'SequenceExpression',
    SpreadElement: 'SpreadElement',
    SpreadProperty: 'SpreadProperty',
    Super: 'Super',
    SwitchCase: 'SwitchCase',
    SwitchStatement: 'SwitchStatement',
    TaggedTemplateExpression: 'TaggedTemplateExpression',
    TemplateElement: 'TemplateElement',
    TemplateLiteral: 'TemplateLiteral',
    ThisExpression: 'ThisExpression',
    ThrowStatement: 'ThrowStatement',
    TryStatement: 'TryStatement',
    UnaryExpression: 'UnaryExpression',
    UpdateExpression: 'UpdateExpression',
    VariableDeclaration: 'VariableDeclaration',
    VariableDeclarator: 'VariableDeclarator',
    WhileStatement: 'WhileStatement',
    WithStatement: 'WithStatement',
    YieldExpression: 'YieldExpression'
};

